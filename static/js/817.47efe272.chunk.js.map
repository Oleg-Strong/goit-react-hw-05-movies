{"version":3,"file":"static/js/817.47efe272.chunk.js","mappings":"mNAIO,IAAMA,GAAI,4JASJC,GAAK,oFAILC,GAAW,OAAOC,EAAAA,GAAP,qBAAH,gFAKRC,GAAS,wMAUTC,GAAI,8IAOLD,EAPK,iN,SCPjB,EApBmB,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACT,EAAD,UACGM,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACR,EAAD,WACE,UAACH,EAAD,CAAUY,GAAE,UAAKP,GAAL,OAAWI,GAAMI,MAAO,CAAEC,KAAMR,GAA5C,WACE,SAACP,EAAD,CACEgB,KAAKC,EAAAA,EAAAA,GAASL,GACdM,IAAKP,EACLQ,MAAM,QACNC,OAAO,WAET,SAACjB,EAAD,UAAYQ,QARLD,EADD,KAejB,C,8ECZD,EAVe,WACb,OACE,SAAC,IAAD,CACEW,YAAa,EACbC,YAAa,OACbC,WAAY,GACZC,QAAS,WAGd,C,sECVYC,E,QAAQC,EAAAA,GAAH,wF,SCKlB,EAHqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAO,SAACF,EAAD,UAAQE,GAChB,C,mMCHKC,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,WAAMC,GAAN,iFACjBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,sCAAmDC,GAAW,CACzEE,OAAQA,IAFoB,mFAAH,sDAMhBE,EAAY,mCAAG,WAAOvB,EAAIqB,GAAX,iFACbC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,iBACSlB,EADT,oBACuBmB,EADvB,mBAEX,CACEE,OAAQA,IAJc,mFAAH,wDASZG,EAAY,mCAAG,WAAOxB,EAAIqB,GAAX,uFACHC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDlB,EADC,4BACqBmB,EADrB,mBAErB,CACEE,OAAQA,IAJc,cACpBI,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,wDAUZC,EAAe,mCAAG,WAAO3B,EAAIqB,GAAX,uFACNC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDlB,EADC,4BACqBmB,EADrB,0BAErB,CACEE,OAAQA,IAJiB,cACvBI,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfE,EAAc,mCAAG,WAAOC,EAAOR,GAAd,uFACLC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,gCACcC,EADd,iCAC8CU,EAD9C,+BAErB,CACER,OAAQA,IAJgB,cACtBI,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,uD,qECtCdnB,EAAW,SAAAX,GAAG,gBACrBA,EAAD,UAFkB,mCAElB,OAAwCA,GAAjCkC,EADe,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Scroll/Scroll.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/utils/api-servises.js","components/utils/checkImg.js"],"sourcesContent":["// import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  height: 350px;\n`;\nexport const FilmLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const FilmTitle = styled.h2`\n  color: white;\n  text-align: center;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n  padding-top: 10px;\n  font-size: 15px;\n  transition: all 250ms;\n`;\nexport const Item = styled.li`\n  overflow: hidden;\n\n  border-radius: 5px;\n  width: 250px;\n  box-shadow: 0px 0px 9px 3px rgba(255, 255, 255, 0.8);\n\n  &:hover ${FilmTitle} {\n    text-shadow: 0 0 5px rgb(252, 5, 5), 0 0 10px rgb(252, 5, 5),\n      0 0 15px rgb(252, 5, 5), 0 0 20px rgb(252, 5, 5), 0 0 30px rgb(252, 5, 5),\n      0 0 40px rgb(252, 5, 5), 0 0 55px rgb(252, 5, 5), 0 0 75px rgb(252, 5, 5);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { checkImg } from '../utils/checkImg';\nimport { List, Item, Photo, FilmLink, FilmTitle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies, url }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <FilmLink to={`${url}${id}`} state={{ from: location }}>\n            <Photo\n              src={checkImg(poster_path)}\n              alt={title}\n              width=\"250px\"\n              height=\"350px\"\n            />\n            <FilmTitle>{title}</FilmTitle>\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import { ScrollToTop } from 'react-to-top';\n\nconst Scroll = () => {\n  return (\n    <ScrollToTop\n      strokeWidth={0}\n      symbolColor={'#fff'}\n      symbolSize={30}\n      bgColor={'#a7a7a7'}\n    />\n  );\n};\nexport default Scroll;\n","import styled from '@emotion/styled';\nexport const Title = styled.h1`\n  margin-top: 20px;\n  text-align: center;\n  font-size: 40px;\n`;\n","import { Title } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nconst SectionTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\nexport default SectionTitle;\n\nSectionTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async signal => {\n  return await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`, {\n    signal: signal,\n  });\n};\n\nexport const getMovieInfo = async (id, signal) => {\n  return await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`,\n    {\n      signal: signal,\n    }\n  );\n};\n\nexport const getMovieCast = async (id, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n    {\n      signal: signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    {\n      signal: signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async (query, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      signal: signal,\n    }\n  );\n  return response.data;\n};\n","import defaultImg from '../../images/default/default-bg.jpg';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport const checkImg = url =>\n  `${!url ? defaultImg : `${BASE_IMAGE_URL}${url}`}`;\n"],"names":["List","Photo","FilmLink","Link","FilmTitle","Item","movies","url","location","useLocation","map","id","title","poster_path","to","state","from","src","checkImg","alt","width","height","strokeWidth","symbolColor","symbolSize","bgColor","Title","styled","children","BASE_URL","API_KEY","getPopularMovies","signal","axios","getMovieInfo","getMovieCast","response","data","getMovieReviews","getMovieByName","query","defaultImg"],"sourceRoot":""}