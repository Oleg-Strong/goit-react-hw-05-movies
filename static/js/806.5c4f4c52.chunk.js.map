{"version":3,"file":"static/js/806.5c4f4c52.chunk.js","mappings":"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","sources":["components/utils/checkCast.js","components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","components/Warning/Warning.styled.jsx","components/Warning/Warning.jsx","components/utils/alert.js","components/utils/api-servises.js","components/utils/checkImg.js"],"sourcesContent":["const checkCasts = castArray => {\n  let filteredArray = castArray.reduce(\n    (acc, value) => {\n      if (acc.map[value.id])\n        //если данноей значение уже было\n        return acc; // ничего не делаем, возвращаем уже собранное\n      acc.map[value.id] = true; // помечаем значение, как обработанное\n      acc.filteredArray.push(value); // добавляем объект в массив отфильтрованных\n      return acc; // возвращаем собранное\n    },\n    {\n      map: {}, // здесь будут отмечаться обработанные значения\n      filteredArray: [], // здесь конечный массив уникальных отфильтрованных свойств\n    }\n  ).filteredArray;\n  return filteredArray; // получаем конечный массив\n};\nexport default checkCasts;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  width: 250px;\n\n  border-radius: 5px;\n  object-fit: cover;\n  box-shadow: 0px 0px 9px 3px rgba(0, 0, 0, 0.8);\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  height: 300px;\n`;\n\nexport const Rol = styled.p`\n  padding: 10px;\n  color: white;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'components/utils/api-servises';\nimport { checkImg } from 'components/utils/checkImg';\nimport Loader from 'components/Loader';\nimport Warning from 'components/Warning';\nimport notify from 'components/utils/alert';\nimport checkCasts from 'components/utils/checkCast';\nimport { List, Item, Photo, Rol } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { id } = useParams();\n  const idToNumber = Number(id);\n  const [casts, setCasts] = useState([]);\n  const [isLoad, setIsLoad] = useState(false);\n\n  useEffect(() => {\n    const controllerMovieCast = new AbortController();\n    const signal = controllerMovieCast.signal;\n\n    setIsLoad(true);\n    getMovieCast(idToNumber, signal)\n      .then(({ cast }) => {\n        const filteredCasts = checkCasts(cast);\n        setCasts(filteredCasts);\n      })\n      .catch(error => {\n        if (error.response) {\n          notify('error');\n          console.log(error.response.data.status_message);\n        } else if (error.request) {\n          console.log(error.name);\n        }\n      })\n      .finally(() => {\n        setIsLoad(false);\n      });\n    return () => {\n      controllerMovieCast.abort();\n    };\n  }, [idToNumber]);\n\n  return isLoad ? (\n    <Loader />\n  ) : casts === 0 ? (\n    <Warning>We don't have any casts for this movie.</Warning>\n  ) : (\n    <List>\n      {casts.map(({ cast_id, name, profile_path, character }) => (\n        <Item key={cast_id}>\n          <Photo\n            src={checkImg(profile_path)}\n            alt={name}\n            width=\"250px\"\n            height=\"300px\"\n          />\n          <Rol>\n            {name} as {character}\n          </Rol>\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default MovieCast;\n","import styled from '@emotion/styled';\nexport const WarnTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 40px;\n  color: #565454;\n  text-shadow: 0 0 5px rgb(252, 5, 5), 0 0 10px rgb(252, 5, 5),\n    0 0 15px rgb(252, 5, 5), 0 0 20px rgb(252, 5, 5), 0 0 30px rgb(252, 5, 5),\n    0 0 40px rgb(252, 5, 5), 0 0 55px rgb(252, 5, 5), 0 0 75px rgb(252, 5, 5);\n`;\n","import { WarnTitle } from './Warning.styled';\nimport PropTypes from 'prop-types';\n\nconst Warning = ({ children }) => {\n  return <WarnTitle>{children}</WarnTitle>;\n};\nexport default Warning;\n\nWarning.propTypes = {\n  children: PropTypes.node,\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst notify = value => {\n  const params = {\n    position: 'top-center',\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: false,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n    theme: 'colored',\n  };\n\n  switch (value) {\n    case 'warning':\n      toast.warn('Nothing found for your request!', params);\n      break;\n    case 'error':\n      toast.error('Error! Something wrong!', params);\n      break;\n    default:\n      return;\n  }\n};\nexport default notify;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async signal => {\n  return await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`, {\n    signal: signal,\n  });\n};\n\nexport const getMovieInfo = async (id, signal) => {\n  return await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`,\n    {\n      signal: signal,\n    }\n  );\n};\n\nexport const getMovieCast = async (id, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n    {\n      signal: signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    {\n      signal: signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async (query, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      signal: signal,\n    }\n  );\n  return response.data;\n};\n","import defaultImg from '../../images/default/default-bg.jpg';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport const checkImg = url =>\n  `${!url ? defaultImg : `${BASE_IMAGE_URL}${url}`}`;\n"],"names":["castArray","reduce","acc","value","map","id","filteredArray","push","List","styled","Item","Photo","Rol","useParams","idToNumber","Number","useState","casts","setCasts","isLoad","setIsLoad","useEffect","controllerMovieCast","AbortController","signal","getMovieCast","then","cast","filteredCasts","checkCasts","catch","error","response","notify","console","log","data","status_message","request","name","finally","abort","Loader","Warning","cast_id","profile_path","character","src","checkImg","alt","width","height","WarnTitle","children","params","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","toast","BASE_URL","API_KEY","getPopularMovies","axios","getMovieInfo","getMovieReviews","getMovieByName","query","url","defaultImg"],"sourceRoot":""}